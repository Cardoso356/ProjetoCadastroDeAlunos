<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAACgkAAAJNU0Z0AUkBTAIBAQIB
        AAEIAQABCAEAARgBAAEYAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFgAwABGAMAAQEBAAEgBgAB
        JBoAAzUBdwMqAbkDKgG5AyoBuQMqAbkDKgG5AyoBuQMqAbkDKgG5AyoBuQMqAbkDKgG5AyoBuQMqAbkD
        KgG5AzIBmRgAAwUBBgMAAf8DAAH/AwAB/wMbASf/ABEAAxAB6gMxAZ8DHAEpAxwBKQMcASkDHAEpAxwB
        KQMcASkDHAEpAxwBKQMcASkDHAEpAxwBKQMcASkDHAEpAxwBKQMyAWEDAAH/FAADHQHVAwEB/gQAAxwB
        1wMAAf8DGwEn/wAQAAH/JwAB/wMQAesDMgFjEAADJwHAAxwBKRAAAxQB5AMHAfcIAAMcAdcDAAH/AxwB
        KP8ADAAB/yQAAxcB4AMbAScDMwGTAwAB/wMHAfYIAAMtAa8DIgE0EAADEgEYAwAB/wMdAdYIAAMcAdcD
        AAH/AxsBJ/8ACAAB/yQAAy4BUwMwAaQDMQFeAwQB+gM0AXEDBwH3BAADLQGvAyIBNBQAAxwBKAMAAf8D
        HQHWCAADHAHXAwAB/wMbASf/AAQAAf8rAAH/AwQB+ggAAzQBcQMHAfYDLQGvAyIBNBgAAxwBKAMAAf8D
        HQHWCAADHAHXAwAB/wMcASj/AAH/BwAB/wMAAf8DAAH/AzMBmAMLAQ4DNAFuAzQBbgM0AW4EAAMNAe4D
        NQGJDAADNAFxAwAB/wMiATQcAAMcASgDAAH/Ax0B1ggAAxwB1wMAAf8DGwEn+wAB/wQAAwoB8wQAAygB
        QAMxAaEDDAEQAzQBdgM0AXYDNAF2CAADDQHuAzUBiQwAAzQBcQMHAfYgAAMcASgDAAH/AxwB1wgAAxwB
        1wMAAf8DGwEnBAAEAQMzAWoDLgGtAy0BrwM0AXYDBgEH2wAB/wQAAwoB8wQAAygBQAMxAaEDGAEiAzAB
        pgMwAaYDMAGmAzABpgM0AWwEAAMNAe4DNQGJDAADNAFxAwcB9iAAAxwBKAMAAf8DHAHXCAADHAHXAwAB
        /wMGAfgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAQH+AxoBJdMAAf8HAAH/AwAB/wMAAf8DNAGMAwIB
        AwMnAT4DJwE+AycBPgMnAT4DFAEbCAADDQHuAzUBiQwAAzQBcQMHAfYgAAMcASgDAAH/Ax0B1gQAAzAB
        WgMAAf8DBAH6AxgBIRAAAwsBDgMQAeoDAAH/AzQBlM8AAf84AAMNAe4DNQGJCAAEAQMAAf8DBwH3IAAD
        HAEoAwAB/wMYAd0DAAH/AzABpyAAAzMBawMAAf8DNQF4ywAB/wQAAwsB8QMLAfEDCwHxAzMBaSgAAw0B
        7gM1AYkEAQMAAf8DHgEsAzMBlgM1AXwgAAMcASgDAAH/AyEBzSgAAzQBjgMAAf8DAgEDxwAB/wQAAwoB
        8wQAAygBQAMxAaEDJwE+AxQB5QMUAeUDFAHlAwQBBRgAAwwB7wMAAf8DHgEsBAADJwE+Ay8BrCAAAzUB
        hgMAAf8zAAH/AyIBy8cAAf8EAAMKAfMEAAMoAUADMQGhBAEDJAE4AyQBOAMkATgDJAE4AxEBFhQAAy0B
        rwMCAfwDLwGsAy0BUAMAAf8DCwEOIwAB/wMnAcEwAAM1AXsDAAH/xwAB/wcAAf8DAAH/AwAB/wMyAaAD
        GgElAy8BrAMvAawDLwGsAy8BrAM0AXIUAAMtAa8DIwE2AzMBaQMyAaADCgENJwAB/wMrAUgwAAMFAQYD
        AAH/xwAB/0AAAy0BrwMjATYzAAH/AxUBHTcAAf/HAAH/BAADNQGGAzUBhgM1AYYDHAEoLAADLQGvAyMB
        NjMAAf8DJwE+MAAEAQMAAf/HAAH/BAADBwH3AzEBXgM1AYYDMQGhAzMBaAMAAf8DAAH/AwAB/wMJAQwM
        AAM1AYEDMQGjAzEBowMVAeIDIwE2MwAB/wMvAaswAAMyAWUDAAH/xwAB/wQAAwoB8wQAAygBQAMxAaEf
        AAH/AzUBfAMoAUADNAGMAwEB/jQAAzEBogMAAf8IAAMnAcEDFAHjEAADMgGdAwEB/ggAAwEB/gMUAeTH
        AAH/BAADAgH9AxwB1wMWAeEDMQGhAy8BVwMAAf8DAAH/AwAB/wMAAf8DIAHQAxUBHQMgAdAEAAMsAUwD
        AQH+PwAB/wMyAaAEAAMUARsDAAH/AwAB/wMKAfIDFAHkAwAB/wMAAf8DMgFiBAADMAFaAwAB/wMMAQ/H
        AAH/BAADCwEOAwsBDgMLAQ4cAAMdASoDKQG7AywBTAMBAf5AAAMzAWkDAAH/AzIBYwgAAzQBdAMTAeYD
        CwHxAzMBlwQBBAADIQEyAwAB/wMuAa3LAAH/LAADHQEqAxIB5wMBAf5IAAMyAZsDAAH/AxwB1wQBFAAD
        LAGzAwAB/wMhAc3MAAMkATgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAgH9UAADJAE4AwAB/wMAAf8DAAH/AxYB4QMYAd0DAAH/AwAB/wMAAf8DMgFi/wBhAAMdASoD
        LQGvAwsB8QMJAfQDKQG8AygBQNQAAUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEBFgAD
        /wEAAcABAAE/AQcC/wYAAYABAAEfASMC/wYAAb8B4wHPATEC/wYAAb8B4AHPARgC/wYAAb8B4AFPAYwB
        fwH/BgABvwHzAQ8BxgE/Af8GAAGgARMBjwHjAR8B/wYAAagBGQHPAfEBiAEfBgABqAEEAecB+AHAAQcG
        AAGgAQYBcwH8AUMBwwYAAb8B/wExAf4BDwHxBgABoQH/AYAB/wEfAfgGAAGoAQ8BxAH/AT8B/AYAAagB
        BwHAAf8BPwH8BgABoAEHAcEB/wE/AfwGAAG/Af8BzwH/AT8B/gYAAaEB/wHPAf8BPwH8BgABoAEOAQ8B
        /wE/AfwGAAGpAfwBHwH/ATMBzAYAAaABAQE/Af8BkAEIBgABowH4AX8B/wGMAREGAAG/AfgC/wHDAeMG
        AAGAAQEC/wHgAQcGAAT/AfgBHwYACw==
</value>
  </data>
</root>